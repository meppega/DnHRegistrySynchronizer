name: Sync Images and Charts to ACR

on:
  workflow_dispatch: # Allows manual trigger from GitHub Actions UI
  schedule:
    # Runs every day at 00:00 UTC
    - cron: '0 0 * * *'

env:
  # Replace with your actual ACR login server, e.g., myregistry.azurecr.io
  # This should match the 'registry.url' in your sync-config.yaml
  ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io 

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Set the environment variable for Docker login
          enable-AzPSSession: true # Required for Azure CLI to set up Docker credentials
          # Optionally, if you have a specific subscription:
          # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Docker Login to ACR
        # The azure/login action should automatically configure Docker CLI to authenticate
        # with ACR. However, an explicit login step ensures it for skopeo/helm.
        run: |
          echo "Attempting Docker login to ACR: ${{ env.ACR_LOGIN_SERVER }}"
          # Use the service principal's app ID and password for Docker login
          # This is the most common way to explicitly log in to ACR from CI/CD
          docker login ${{ env.ACR_LOGIN_SERVER }} \
            -u ${{ secrets.AZURE_CLIENT_ID }} \
            -p ${{ secrets.AZURE_CLIENT_SECRET }}
        # Ensure this step runs even if previous steps fail, for debugging
        continue-on-error: false

      - name: Build Custom Skopeo/Helm Image
        # Docker Compose will build your custom image based on the Dockerfile
        run: docker compose build skopeo
        working-directory: . # Ensure it runs from the root of your repo

      - name: Run Synchronization Script
        # This command will start the 'skopeo' service, which executes your sync-script.sh
        # --rm: Remove container after exit
        # --no-deps: Don't recreate other services (like a local registry if it existed)
        # --force-recreate: Always recreate the container
        run: docker compose run --rm --force-recreate --no-deps skopeo
        working-directory: . # Ensure it runs from the root of your repo